Storing small musical ideas and playing around with modularization using Guice.

Modules:
APPLICATION
  |-> COMPONENT  (private application components)
  |-> CONTROLLER (public accessible controllers)
  |-> MODEL      (the internal data model)
  |-> PORTS      (interfaces that that other modules should extend to work with the core)
Contains the application engine and logic of models, and "business" (music) rules. Should depend on no other module.

INTERACTION (how should the user interact with the system?)
  |-> MIDI     (how should midi systems interact?)
  |-> TERMINAL (how should a terminal interact?)
Should depend only on CORE.

STORAGE     (how should the system store its data?)
Should depend only on CORE.
